var bstack: stack<bit8>
var btemploop: []bit8
var bcurrent: int
var bcode: []char

func main()
    do @greet()
    do @listen()
end func

func greet()
    do cui@print("\nWelcome to Brainstack interpreter!\n")
    do cui@print("Type \"quit\" to quiti\n")
    do @bstack :: #stack<bit8>
    do @btemploop :: #[2]bit8
    do @bcurrent :: 0
end func

func listen()
    while wait(true)
        do cui@print("\n> ")
        do @bcode :: cui@input()
        if(@bcode = "quit")
            do cui@print("Bye!\n\n")
            break wait
        end if
        do parse(@bcode)
    end while
    func parse(bcode: []char)
        for i(0, ^bcode - 1)
            switch(bcode[i])
            case '+'
                do @btemploop[@bcurrent] :+ 1b8
            case '-'
                do @btemploop[@bcurrent] :- 1b8
            case 'p'
                do cui@print("\{@btemploop[@bcurrent] $ char}\n")
            end switch
        end for
    end func
end func
